import { BooleanInput } from '@angular/cdk/coercion';
import { AfterViewInit, ChangeDetectorRef, ElementRef, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { Observable, Subject } from 'rxjs';
import { MdbTablePaginationComponent } from './table-pagination.component';
import { MdbTableSortDirective } from './table-sort.directive';
import * as i0 from "@angular/core";
export declare class MdbTableDirective<T> implements OnInit, AfterViewInit, OnDestroy {
    private el;
    private renderer;
    private _cdRef;
    get striped(): boolean;
    set striped(value: boolean);
    private _striped;
    get bordered(): boolean;
    set bordered(value: boolean);
    private _bordered;
    get borderless(): boolean;
    set borderless(value: boolean);
    private _borderless;
    get hover(): boolean;
    set hover(value: boolean);
    private _hover;
    get sm(): boolean;
    set sm(value: boolean);
    private _sm;
    get responsive(): boolean;
    set responsive(value: boolean);
    private _responsive;
    get dataSource(): T[] | null;
    set dataSource(newData: T[] | null);
    get fixedHeader(): boolean;
    set fixedHeader(value: boolean);
    private _fixedHeader;
    filterFn: (data: T, searchTerm: string) => boolean;
    pagination: MdbTablePaginationComponent;
    sort: MdbTableSortDirective;
    constructor(el: ElementRef, renderer: Renderer2, _cdRef: ChangeDetectorRef);
    private _dataSource;
    private _filteredData;
    private _dataSourceChanged;
    private _searchText;
    data: T[];
    readonly _destroy$: Subject<void>;
    addRow(newRow: any): void;
    addRowAfter(index: number, row: any): void;
    removeRow(index: number): void;
    rowRemoved(): Observable<boolean>;
    removeLastRow(): void;
    dataSourceChange(): Observable<any>;
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    search(value: string): void;
    _updateData(): void;
    private _filterData;
    defaultFilterFn(data: T, searchTerm: string): boolean;
    private _sortData;
    private _sortFn;
    private _paginateData;
    static ngAcceptInputType_striped: BooleanInput;
    static ngAcceptInputType_bordered: BooleanInput;
    static ngAcceptInputType_borderless: BooleanInput;
    static ngAcceptInputType_hover: BooleanInput;
    static ngAcceptInputType_sm: BooleanInput;
    static ngAcceptInputType_responsive: BooleanInput;
    static ngAcceptInputType_fixedHeader: BooleanInput;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbTableDirective<any>, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbTableDirective<any>, "[mdbTable]", ["mdbTable"], { "striped": "striped"; "bordered": "bordered"; "borderless": "borderless"; "hover": "hover"; "sm": "sm"; "responsive": "responsive"; "dataSource": "dataSource"; "fixedHeader": "fixedHeader"; "filterFn": "filterFn"; "pagination": "pagination"; "sort": "sort"; }, {}, never, ["*"]>;
}
