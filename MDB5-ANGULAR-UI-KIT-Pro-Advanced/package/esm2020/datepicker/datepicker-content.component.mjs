import { animate, state, style, transition, trigger } from '@angular/animations';
import { ChangeDetectionStrategy, Component } from '@angular/core';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "./datepicker-day-view.component";
import * as i2 from "./datepicker-year-view.component";
import * as i3 from "./datepicker-month-view.component";
import * as i4 from "@angular/cdk/a11y";
import * as i5 from "@angular/common";
export class MdbDatepickerContentComponent {
    constructor(_cdRef) {
        this._cdRef = _cdRef;
        this._hideAnimationDone = new Subject();
        this._contentAnimationState = 'show';
    }
    detectChanges() {
        this._cdRef.markForCheck();
    }
    ngOnDestroy() {
        this._hideAnimationDone.complete();
    }
    onDateSelect(date) {
        this.datepicker._selectDate(date);
    }
    onYearSelect(year) {
        this.datepicker._selectYear(year);
    }
    onMonthSelect(month) {
        this.datepicker._selectMonth(month);
    }
    _startHideAnimation() {
        this._contentAnimationState = 'hide';
        this._cdRef.markForCheck();
    }
    _onAnimationDone(event) {
        if (event.toState === 'hide') {
            this._hideAnimationDone.next();
        }
    }
}
MdbDatepickerContentComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbDatepickerContentComponent, deps: [{ token: i0.ChangeDetectorRef }], target: i0.ɵɵFactoryTarget.Component });
MdbDatepickerContentComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "13.2.7", type: MdbDatepickerContentComponent, selector: "mdb-datepicker-content", exportAs: ["mdbDatepickerContent"], ngImport: i0, template: "<div\n  [@fadeInOutDatepicker]=\"_contentAnimationState\"\n  (@fadeInOutDatepicker.done)=\"_onAnimationDone($event)\"\n  cdkTrapFocus\n  [ngClass]=\"{\n    'datepicker-modal-container': !datepicker.inline,\n    'datepicker-dropdown-container': datepicker.inline\n  }\"\n>\n  <div class=\"datepicker-header\" *ngIf=\"!datepicker.inline\">\n    <div class=\"datepicker-title\">\n      <span class=\"datepicker-title-text\">{{ datepicker.options.title }}</span>\n    </div>\n    <div class=\"datepicker-date\">\n      <span class=\"datepicker-date-text\">{{ datepicker._headerDate }}</span>\n    </div>\n  </div>\n  <div class=\"datepicker-main\">\n    <div class=\"datepicker-date-controls\">\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.viewChangeButtonLabel\"\n        class=\"datepicker-view-change-button\"\n        (click)=\"datepicker.viewChange(); ($event.preventDefault); $event.stopPropagation()\"\n      >\n        {{ datepicker.viewChangeButtonText }}\n      </button>\n      <div class=\"datepicker-arrow-controls\">\n        <button\n          type=\"button\"\n          [attr.aria-label]=\"datepicker.prevButtonLabel\"\n          class=\"datepicker-previous-button\"\n          [disabled]=\"datepicker._prevBtnDisabled\"\n          (click)=\"datepicker._handlePreviousButtonClick()\"\n        ></button>\n        <button\n          type=\"button\"\n          [attr.aria-label]=\"datepicker.nextButtonLabel\"\n          class=\"datepicker-next-button\"\n          [disabled]=\"datepicker._nextBtnDisabled\"\n          (click)=\"datepicker._handleNextButtonClick()\"\n        ></button>\n      </div>\n    </div>\n    <div class=\"datepicker-view\" [ngSwitch]=\"datepicker._currentView\">\n      <mdb-datepicker-day-view\n        *ngSwitchCase=\"'days'\"\n        [(activeDate)]=\"datepicker._activeDate\"\n        [selectedDate]=\"datepicker._selectedDate\"\n        [startDay]=\"datepicker.startDay\"\n        [options]=\"datepicker.options\"\n        [minDate]=\"datepicker.minDate\"\n        [maxDate]=\"datepicker.maxDate\"\n        [filter]=\"datepicker.filter\"\n        (dateSelected)=\"onDateSelect($event)\"\n      ></mdb-datepicker-day-view>\n      <mdb-datepicker-year-view\n        *ngSwitchCase=\"'years'\"\n        [(activeDate)]=\"datepicker._activeDate\"\n        [minDate]=\"datepicker.minDate\"\n        [maxDate]=\"datepicker.maxDate\"\n        [selectedYear]=\"datepicker._selectedYear\"\n        (yearSelected)=\"onYearSelect($event)\"\n      ></mdb-datepicker-year-view>\n      <mdb-datepicker-month-view\n        *ngSwitchCase=\"'months'\"\n        [(activeDate)]=\"datepicker._activeDate\"\n        [selectedMonth]=\"datepicker._selectedMonth\"\n        [selectedYear]=\"datepicker._selectedYear\"\n        [options]=\"datepicker.options\"\n        [minDate]=\"datepicker.minDate\"\n        [maxDate]=\"datepicker.maxDate\"\n        (monthSelected)=\"onMonthSelect($event)\"\n      ></mdb-datepicker-month-view>\n    </div>\n    <div class=\"datepicker-footer\" *ngIf=\"!datepicker.inline\">\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.options.clearBtnLabel\"\n        class=\"datepicker-footer-btn datepicker-clear-btn\"\n        (click)=\"datepicker._handleClearClick()\"\n      >\n        {{ datepicker.options.clearBtnText }}\n      </button>\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.options.cancelBtnLabel\"\n        class=\"datepicker-footer-btn datepicker-cancel-btn\"\n        (click)=\"datepicker._handleCancelClick()\"\n      >\n        {{ datepicker.options.cancelBtnText }}\n      </button>\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.options.okBtnLabel\"\n        class=\"datepicker-footer-btn datepicker-ok-btn\"\n        (click)=\"datepicker._handleOkClick()\"\n      >\n        {{ datepicker.options.okBtnText }}\n      </button>\n    </div>\n  </div>\n</div>\n", components: [{ type: i1.MdbDatepickerDayViewComponent, selector: "mdb-datepicker-day-view", inputs: ["selectedDate", "minDate", "maxDate", "filter", "startDay", "activeDate", "options"], outputs: ["dateSelected", "activeDateChange"] }, { type: i2.MdbDatepickerYearViewComponent, selector: "mdb-datepicker-year-view", inputs: ["activeDate", "minDate", "maxDate", "selectedYear", "options"], outputs: ["yearSelected", "activeDateChange"] }, { type: i3.MdbDatepickerMonthViewComponent, selector: "mdb-datepicker-month-view", inputs: ["options", "minDate", "maxDate", "activeDate", "selectedMonth", "selectedYear"], outputs: ["monthSelected", "activeDateChange"] }], directives: [{ type: i4.CdkTrapFocus, selector: "[cdkTrapFocus]", inputs: ["cdkTrapFocus", "cdkTrapFocusAutoCapture"], exportAs: ["cdkTrapFocus"] }, { type: i5.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i5.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i5.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i5.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }], animations: [
        trigger('fadeInOutDatepicker', [
            state('void', style({ opacity: 0 })),
            state('hide', style({ opacity: 0 })),
            state('show', style({ opacity: 1 })),
            transition('* <=> *', animate('300ms ease-in-out')),
        ]),
    ], changeDetection: i0.ChangeDetectionStrategy.OnPush });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "13.2.7", ngImport: i0, type: MdbDatepickerContentComponent, decorators: [{
            type: Component,
            args: [{ selector: 'mdb-datepicker-content', exportAs: 'mdbDatepickerContent', changeDetection: ChangeDetectionStrategy.OnPush, animations: [
                        trigger('fadeInOutDatepicker', [
                            state('void', style({ opacity: 0 })),
                            state('hide', style({ opacity: 0 })),
                            state('show', style({ opacity: 1 })),
                            transition('* <=> *', animate('300ms ease-in-out')),
                        ]),
                    ], template: "<div\n  [@fadeInOutDatepicker]=\"_contentAnimationState\"\n  (@fadeInOutDatepicker.done)=\"_onAnimationDone($event)\"\n  cdkTrapFocus\n  [ngClass]=\"{\n    'datepicker-modal-container': !datepicker.inline,\n    'datepicker-dropdown-container': datepicker.inline\n  }\"\n>\n  <div class=\"datepicker-header\" *ngIf=\"!datepicker.inline\">\n    <div class=\"datepicker-title\">\n      <span class=\"datepicker-title-text\">{{ datepicker.options.title }}</span>\n    </div>\n    <div class=\"datepicker-date\">\n      <span class=\"datepicker-date-text\">{{ datepicker._headerDate }}</span>\n    </div>\n  </div>\n  <div class=\"datepicker-main\">\n    <div class=\"datepicker-date-controls\">\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.viewChangeButtonLabel\"\n        class=\"datepicker-view-change-button\"\n        (click)=\"datepicker.viewChange(); ($event.preventDefault); $event.stopPropagation()\"\n      >\n        {{ datepicker.viewChangeButtonText }}\n      </button>\n      <div class=\"datepicker-arrow-controls\">\n        <button\n          type=\"button\"\n          [attr.aria-label]=\"datepicker.prevButtonLabel\"\n          class=\"datepicker-previous-button\"\n          [disabled]=\"datepicker._prevBtnDisabled\"\n          (click)=\"datepicker._handlePreviousButtonClick()\"\n        ></button>\n        <button\n          type=\"button\"\n          [attr.aria-label]=\"datepicker.nextButtonLabel\"\n          class=\"datepicker-next-button\"\n          [disabled]=\"datepicker._nextBtnDisabled\"\n          (click)=\"datepicker._handleNextButtonClick()\"\n        ></button>\n      </div>\n    </div>\n    <div class=\"datepicker-view\" [ngSwitch]=\"datepicker._currentView\">\n      <mdb-datepicker-day-view\n        *ngSwitchCase=\"'days'\"\n        [(activeDate)]=\"datepicker._activeDate\"\n        [selectedDate]=\"datepicker._selectedDate\"\n        [startDay]=\"datepicker.startDay\"\n        [options]=\"datepicker.options\"\n        [minDate]=\"datepicker.minDate\"\n        [maxDate]=\"datepicker.maxDate\"\n        [filter]=\"datepicker.filter\"\n        (dateSelected)=\"onDateSelect($event)\"\n      ></mdb-datepicker-day-view>\n      <mdb-datepicker-year-view\n        *ngSwitchCase=\"'years'\"\n        [(activeDate)]=\"datepicker._activeDate\"\n        [minDate]=\"datepicker.minDate\"\n        [maxDate]=\"datepicker.maxDate\"\n        [selectedYear]=\"datepicker._selectedYear\"\n        (yearSelected)=\"onYearSelect($event)\"\n      ></mdb-datepicker-year-view>\n      <mdb-datepicker-month-view\n        *ngSwitchCase=\"'months'\"\n        [(activeDate)]=\"datepicker._activeDate\"\n        [selectedMonth]=\"datepicker._selectedMonth\"\n        [selectedYear]=\"datepicker._selectedYear\"\n        [options]=\"datepicker.options\"\n        [minDate]=\"datepicker.minDate\"\n        [maxDate]=\"datepicker.maxDate\"\n        (monthSelected)=\"onMonthSelect($event)\"\n      ></mdb-datepicker-month-view>\n    </div>\n    <div class=\"datepicker-footer\" *ngIf=\"!datepicker.inline\">\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.options.clearBtnLabel\"\n        class=\"datepicker-footer-btn datepicker-clear-btn\"\n        (click)=\"datepicker._handleClearClick()\"\n      >\n        {{ datepicker.options.clearBtnText }}\n      </button>\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.options.cancelBtnLabel\"\n        class=\"datepicker-footer-btn datepicker-cancel-btn\"\n        (click)=\"datepicker._handleCancelClick()\"\n      >\n        {{ datepicker.options.cancelBtnText }}\n      </button>\n      <button\n        type=\"button\"\n        [attr.aria-label]=\"datepicker.options.okBtnLabel\"\n        class=\"datepicker-footer-btn datepicker-ok-btn\"\n        (click)=\"datepicker._handleOkClick()\"\n      >\n        {{ datepicker.options.okBtnText }}\n      </button>\n    </div>\n  </div>\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i0.ChangeDetectorRef }]; } });
//# sourceMappingURL=data:application/json;base64,