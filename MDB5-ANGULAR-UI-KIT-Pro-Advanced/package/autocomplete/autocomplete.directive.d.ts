import { ElementRef, OnDestroy, ViewContainerRef } from '@angular/core';
import { MdbAutocompleteComponent } from './autocomplete.component';
import { ControlValueAccessor } from '@angular/forms';
import { Overlay, ViewportRuler } from '@angular/cdk/overlay';
import { MdbOptionComponent } from 'mdb-angular-ui-kit/option';
import * as i0 from "@angular/core";
export declare const MDB_AUTOCOMPLETE_VALUE_ACCESOR: any;
export declare class MdbAutocompleteDirective implements OnDestroy, ControlValueAccessor {
    private _overlay;
    private _vcr;
    private _elementRef;
    private _viewportRuler;
    private document;
    mdbAutocomplete: MdbAutocompleteComponent;
    private _overlayRef;
    private _portal;
    private _canOpenOnFocus;
    _isDropdownOpen: boolean;
    private _destroy$;
    get input(): HTMLInputElement;
    get hasValue(): boolean;
    onKeydown(event: KeyboardEvent): void;
    _handleInput(event: any): void;
    _handleFocusIn(): void;
    _handleBlur(): void;
    autocomplete: boolean;
    get isOpen(): boolean;
    get labelActive(): boolean;
    constructor(_overlay: Overlay, _vcr: ViewContainerRef, _elementRef: ElementRef, _viewportRuler: ViewportRuler, document: any);
    private _handleKeyDown;
    private _moveHighlightedIntoView;
    private _setValue;
    private _clearPreviousSelection;
    private _setInputValue;
    get activeOption(): MdbOptionComponent | null;
    private _resetHighlight;
    open(): void;
    private _listenToOptionChange;
    private _handleOptionClick;
    close(): void;
    private _listenToOutSideCick;
    private _getOverlayPosition;
    private _getPositions;
    ngOnDestroy(): void;
    private _destroyDropdown;
    /** Control value accessor methods */
    setDisabledState(isDisabled: boolean): void;
    _onChange: (value: any) => void;
    _onTouched: () => void;
    writeValue(value: any): void;
    registerOnChange(fn: (value: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbAutocompleteDirective, never>;
    static ɵdir: i0.ɵɵDirectiveDeclaration<MdbAutocompleteDirective, "input[mdbAutocomplete], textarea[mdbAutocomplete]", ["mdbAutocompleteInput"], { "mdbAutocomplete": "mdbAutocomplete"; }, {}, never>;
}
