import { AfterViewInit, ChangeDetectorRef, ElementRef, NgZone, OnDestroy, OnInit, Renderer2 } from '@angular/core';
import { FocusMonitor } from '@angular/cdk/a11y';
import { AmPm, Options, SelectedTime } from './timepicker.interface';
import { MdbTimepickerComponent } from './timepicker.component';
import { AnimationEvent } from '@angular/animations';
import { Subject } from 'rxjs';
import * as i0 from "@angular/core";
export declare class MdbTimepickerContentComponent implements OnInit, AfterViewInit, OnDestroy {
    private _cdRef;
    private _ngZone;
    focusMonitor: FocusMonitor;
    elem: ElementRef;
    renderer: Renderer2;
    private _document;
    plate: ElementRef;
    hand: ElementRef;
    fg: ElementRef;
    bg: ElementRef;
    focus: ElementRef;
    digitalMinute: ElementRef;
    _hideAnimationDone: Subject<void>;
    _contentAnimationState: string;
    autoClose: boolean;
    options: Options;
    maxTime: SelectedTime;
    minTime: SelectedTime;
    picker: MdbTimepickerComponent;
    increment: boolean;
    format12: boolean;
    format24: boolean;
    value: SelectedTime;
    inline: boolean;
    switchHoursToMinutesOnClick: boolean;
    private _maxTime;
    private _minTime;
    private _returnHours;
    private _disabledHours;
    private _disabledMinutes;
    private _isMouseDown;
    _hoursTicks: any[];
    _minuteDigitalDisabled: boolean;
    _minutesTicks: any[];
    _okButtonDisabled: boolean;
    _selectedTime: SelectedTime;
    _showHours: boolean;
    private _radius;
    private _denominator;
    private touchSupported;
    constructor(_cdRef: ChangeDetectorRef, _ngZone: NgZone, focusMonitor: FocusMonitor, elem: ElementRef, renderer: Renderer2, _document: any);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    markForCheck(): void;
    _onAnimationDone(event: AnimationEvent): void;
    _startHideAnimation(): void;
    private _checkDraw;
    private _mousedown;
    _closeBtnClicked(): void;
    _clearBtnClicked(): void;
    _okBtnClicked(): void;
    _arrowChangeHour(key: string): void;
    _arrowChangeMinute(key: string): void;
    private _generateMinutesDisable;
    _setHour(hour: number): void;
    private _setMinute;
    _setAmPm(ampm: AmPm): void;
    _showHoursClock(): void;
    _showMinutesClock(): void;
    private _generateTick;
    private setClockHand;
    private _to24;
    private _rangeHour;
    private _rangeMinute;
    private _setOkBtnDisabled;
    private _setMinuteDigitalDisabled;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbTimepickerContentComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbTimepickerContentComponent, "mdb-timepicker-content", never, {}, {}, never, never>;
}
