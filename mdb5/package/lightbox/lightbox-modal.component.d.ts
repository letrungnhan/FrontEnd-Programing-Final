import { ConfigurableFocusTrapFactory } from '@angular/cdk/a11y';
import { AfterViewInit, QueryList, Renderer2, ElementRef, ChangeDetectorRef, OnDestroy } from '@angular/core';
import { MdbLightboxItemDirective } from './lightbox-item.directive';
import { MdbLightboxComponent } from './lightbox.component';
import * as i0 from "@angular/core";
export declare class MdbLightboxModalComponent implements AfterViewInit, OnDestroy {
    private _renderer;
    private _elementRef;
    private _cdRef;
    private _focusTrapFactory;
    private _document;
    galleryToolbar: ElementRef;
    btnPrevious: ElementRef;
    btnNext: ElementRef;
    rightArrow: ElementRef;
    leftArrow: ElementRef;
    btnFullsreen: ElementRef;
    btnZoom: ElementRef;
    loader: ElementRef;
    imageWrappers: QueryList<ElementRef>;
    images: QueryList<ElementRef>;
    onHostMousemove(): void;
    onHostKeyup(event: KeyboardEvent): void;
    onHostClick(target: HTMLElement): void;
    lightbox: MdbLightboxComponent;
    lightboxItems: QueryList<MdbLightboxItemDirective>;
    activeLightboxItem: MdbLightboxItemDirective;
    zoomLevel: number;
    index: number;
    total: number;
    animationState: string;
    slideRight: boolean;
    activeModalImageIndex: number;
    private _slideTimer;
    private _toolsToggleTimer;
    private _zoomTimer;
    private _doubleTapTimer;
    private _focusTrap;
    private _previouslyFocusedElement;
    private _fullscreen;
    private _scale;
    private _mousedown;
    private _positionX;
    private _positionY;
    private _mousedownPositionX;
    private _mousedownPositionY;
    private _originalPositionX;
    private _originalPositionY;
    private _tapCounter;
    private _tapTime;
    private _toolsTimeout;
    private _doubleTapTimeout;
    constructor(_renderer: Renderer2, _elementRef: ElementRef, _cdRef: ChangeDetectorRef, _focusTrapFactory: ConfigurableFocusTrapFactory, _document: any, _lightbox: MdbLightboxComponent);
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    get activeImageElement(): HTMLImageElement;
    get activeImageWrapper(): HTMLElement;
    get nextImageWrapper(): HTMLElement;
    get previousImageWrapper(): HTMLElement;
    get nextImage(): HTMLImageElement;
    get previousImage(): HTMLImageElement;
    onMousedown(event: any): void;
    onMousemove(event: any): void;
    onMouseup(event: MouseEvent): void;
    zoom(): void;
    close(): void;
    toggleFullscreen(): void;
    private _setDefaultAnimationStyle;
    private _preloadInactiveImages;
    private _onKeyup;
    private _moveImg;
    private _setActiveImageData;
    private _setNewPositionOnZoomIn;
    private _resetToolsToggler;
    toggleToolbar(opacity: number): void;
    private _setToolsToggleTimeout;
    onWheel(event: WheelEvent): void;
    zoomIn(): void;
    zoomOut(): void;
    slide(target?: string): void;
    reset(): void;
    private _disableScroll;
    private _enableScroll;
    private _restoreDefaultZoom;
    private _updateImgPosition;
    private _checkDoubleTap;
    private _onDoubleClick;
    private _updateZoomBtn;
    private _restoreDefaultPosition;
    private _updateActiveLightboxItem;
    load(): void;
    private _showLoader;
    private _hideLoader;
    private _calculateImgSize;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbLightboxModalComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbLightboxModalComponent, "mdb-lightbox-modal", never, {}, {}, never, never>;
}
