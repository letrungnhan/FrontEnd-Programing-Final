import { animate, style, transition, trigger, state, } from '@angular/animations';
import { getOptions } from '../animations.utils';
const slideLeftOptions = {
    trigger: 'slideLeft',
    delay: 0,
    duration: 500,
};
export function slideLeftAnimation(options) {
    options = getOptions(options, slideLeftOptions);
    return trigger(options.trigger, [
        state('1', style({
            transform: 'translate3d(-100%, 0, 0)',
        })),
        state('0', style({
            transform: 'translate3d(0, 0, 0)',
        })),
        transition('0 => 1', [animate('{{duration}}ms {{delay}}ms ease')], {
            params: {
                delay: options.delay,
                duration: options.duration,
            },
        }),
        transition('1 => 0', []),
    ]);
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2xpZGUtbGVmdC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uL3Byb2plY3RzL21kYi1hbmd1bGFyLXVpLWtpdC9hbmltYXRpb25zL3NsaWRlL3NsaWRlLWxlZnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUNMLE9BQU8sRUFFUCxLQUFLLEVBQ0wsVUFBVSxFQUNWLE9BQU8sRUFDUCxLQUFLLEdBQ04sTUFBTSxxQkFBcUIsQ0FBQztBQUU3QixPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFakQsTUFBTSxnQkFBZ0IsR0FBd0I7SUFDNUMsT0FBTyxFQUFFLFdBQVc7SUFDcEIsS0FBSyxFQUFFLENBQUM7SUFDUixRQUFRLEVBQUUsR0FBRztDQUNkLENBQUM7QUFFRixNQUFNLFVBQVUsa0JBQWtCLENBQUMsT0FBNkI7SUFDOUQsT0FBTyxHQUFHLFVBQVUsQ0FBQyxPQUFPLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztJQUVoRCxPQUFPLE9BQU8sQ0FBQyxPQUFPLENBQUMsT0FBTyxFQUFFO1FBQzlCLEtBQUssQ0FDSCxHQUFHLEVBQ0gsS0FBSyxDQUFDO1lBQ0osU0FBUyxFQUFFLDBCQUEwQjtTQUN0QyxDQUFDLENBQ0g7UUFDRCxLQUFLLENBQ0gsR0FBRyxFQUNILEtBQUssQ0FBQztZQUNKLFNBQVMsRUFBRSxzQkFBc0I7U0FDbEMsQ0FBQyxDQUNIO1FBQ0QsVUFBVSxDQUFDLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQyxDQUFDLEVBQUU7WUFDakUsTUFBTSxFQUFFO2dCQUNOLEtBQUssRUFBRSxPQUFPLENBQUMsS0FBSztnQkFDcEIsUUFBUSxFQUFFLE9BQU8sQ0FBQyxRQUFRO2FBQzNCO1NBQ0YsQ0FBQztRQUNGLFVBQVUsQ0FBQyxRQUFRLEVBQUUsRUFBRSxDQUFDO0tBQ3pCLENBQUMsQ0FBQztBQUNMLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBhbmltYXRlLFxuICBBbmltYXRpb25UcmlnZ2VyTWV0YWRhdGEsXG4gIHN0eWxlLFxuICB0cmFuc2l0aW9uLFxuICB0cmlnZ2VyLFxuICBzdGF0ZSxcbn0gZnJvbSAnQGFuZ3VsYXIvYW5pbWF0aW9ucyc7XG5pbXBvcnQgeyBNZGJBbmltYXRpb25PcHRpb25zIH0gZnJvbSAnLi4vYW5pbWF0aW9uLm9wdGlvbnMnO1xuaW1wb3J0IHsgZ2V0T3B0aW9ucyB9IGZyb20gJy4uL2FuaW1hdGlvbnMudXRpbHMnO1xuXG5jb25zdCBzbGlkZUxlZnRPcHRpb25zOiBNZGJBbmltYXRpb25PcHRpb25zID0ge1xuICB0cmlnZ2VyOiAnc2xpZGVMZWZ0JyxcbiAgZGVsYXk6IDAsXG4gIGR1cmF0aW9uOiA1MDAsXG59O1xuXG5leHBvcnQgZnVuY3Rpb24gc2xpZGVMZWZ0QW5pbWF0aW9uKG9wdGlvbnM/OiBNZGJBbmltYXRpb25PcHRpb25zKTogQW5pbWF0aW9uVHJpZ2dlck1ldGFkYXRhIHtcbiAgb3B0aW9ucyA9IGdldE9wdGlvbnMob3B0aW9ucywgc2xpZGVMZWZ0T3B0aW9ucyk7XG5cbiAgcmV0dXJuIHRyaWdnZXIob3B0aW9ucy50cmlnZ2VyLCBbXG4gICAgc3RhdGUoXG4gICAgICAnMScsXG4gICAgICBzdHlsZSh7XG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKC0xMDAlLCAwLCAwKScsXG4gICAgICB9KVxuICAgICksXG4gICAgc3RhdGUoXG4gICAgICAnMCcsXG4gICAgICBzdHlsZSh7XG4gICAgICAgIHRyYW5zZm9ybTogJ3RyYW5zbGF0ZTNkKDAsIDAsIDApJyxcbiAgICAgIH0pXG4gICAgKSxcbiAgICB0cmFuc2l0aW9uKCcwID0+IDEnLCBbYW5pbWF0ZSgne3tkdXJhdGlvbn19bXMge3tkZWxheX19bXMgZWFzZScpXSwge1xuICAgICAgcGFyYW1zOiB7XG4gICAgICAgIGRlbGF5OiBvcHRpb25zLmRlbGF5LFxuICAgICAgICBkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcbiAgICAgIH0sXG4gICAgfSksXG4gICAgdHJhbnNpdGlvbignMSA9PiAwJywgW10pLFxuICBdKTtcbn1cbiJdfQ==