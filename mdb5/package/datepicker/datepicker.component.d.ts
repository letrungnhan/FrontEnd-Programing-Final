import { ViewContainerRef, OnDestroy, EventEmitter, ChangeDetectorRef, OnInit, Renderer2 } from '@angular/core';
import { Overlay } from '@angular/cdk/overlay';
import { MdbDatepickerToggleComponent } from './datepicker-toggle.component';
import { MdbDatepickerInputDirective } from './datepicker-input.directive';
import { BooleanInput } from '@angular/cdk/coercion';
import * as i0 from "@angular/core";
export declare type MdbDatepickerView = 'days' | 'months' | 'years';
export declare class MdbDatepickerComponent implements OnInit, OnDestroy {
    private _document;
    private _overlay;
    private _vcr;
    private _renderer;
    private _cdRef;
    defaultOptions: {
        title: string;
        monthsFull: string[];
        monthsShort: string[];
        weekdaysFull: string[];
        weekdaysShort: string[];
        weekdaysNarrow: string[];
        okBtnText: string;
        clearBtnText: string;
        cancelBtnText: string;
        okBtnLabel: string;
        clearBtnLabel: string;
        cancelBtnLabel: string;
        nextMonthLabel: string;
        prevMonthLabel: string;
        nextYearLabel: string;
        prevYearLabel: string;
        nextMultiYearLabel: string;
        prevMultiYearLabel: string;
        switchToMultiYearViewLabel: string;
        switchToDayViewLabel: string;
    };
    get disabled(): boolean;
    set disabled(value: boolean);
    private _disabled;
    get inline(): boolean;
    set inline(value: boolean);
    private _inline;
    format: string;
    filter: (date: Date) => boolean;
    get openOnInputClick(): boolean;
    set openOnInputClick(value: boolean);
    private _openOnInputClick;
    options: any;
    startDate: null | Date;
    startDay: number;
    startView: MdbDatepickerView;
    minDate: Date;
    maxDate: Date;
    readonly dateChanged: EventEmitter<Date>;
    readonly viewChanged: EventEmitter<string>;
    readonly clearButtonClicked: EventEmitter<null>;
    readonly cancelButtonClicked: EventEmitter<null>;
    readonly confirmButtonClicked: EventEmitter<null>;
    readonly opened: EventEmitter<null>;
    readonly closed: EventEmitter<null>;
    private _overlayRef;
    private _portal;
    private _pickerRef;
    _activeDate: Date;
    _selectedDate: null | Date;
    _selectedYear: null | number;
    _selectedMonth: null | number;
    _prevBtnDisabled: boolean;
    _nextBtnDisabled: boolean;
    _currentView: MdbDatepickerView;
    _input: HTMLInputElement;
    _inputDirective: MdbDatepickerInputDirective;
    _toggle: MdbDatepickerToggleComponent;
    _headerDate: string;
    _isOpen: boolean;
    get activeDay(): number;
    get activeMonth(): number;
    get activeYear(): number;
    get firstYearInView(): number;
    get lastYearInView(): number;
    get viewChangeButtonText(): string;
    get viewChangeButtonLabel(): string;
    get nextButtonLabel(): string;
    get prevButtonLabel(): string;
    constructor(_document: any, _overlay: Overlay, _vcr: ViewContainerRef, _renderer: Renderer2, _cdRef: ChangeDetectorRef);
    ngOnInit(): void;
    _updateHeaderDate(date: Date): void;
    open(): void;
    private _getOverlayConfig;
    private _getPositions;
    private _hasVerticalScroll;
    private _listenToOutsideClick;
    close(): void;
    toggle(): void;
    viewChange(): void;
    _handlePreviousButtonClick(): void;
    _handleNextButtonClick(): void;
    _updateControlsDisabledState(): void;
    _nextMonth(): void;
    _previousMonth(): void;
    _nextYear(): void;
    _previousYear(): void;
    _nextYears(): void;
    _previousYears(): void;
    _handleUserInput(input: string, emitChanges?: boolean): void;
    _getDelimeters(format: string): any;
    _parseDate(dateString: string, format: string, delimeters: any): Date;
    private _getMonthNumberByMonthName;
    _applyInputDate(date: Date | null): void;
    _selectDate(date: Date): void;
    _confirmSelection(date: Date): void;
    _formatDate(date: Date): string;
    private _addLeadingZero;
    _selectYear(year: number): void;
    _selectMonth(month: number): void;
    _handleOkClick(): void;
    _handleCancelClick(): void;
    _handleClearClick(): void;
    private _clearDate;
    private _setInitialDate;
    ngOnDestroy(): void;
    static ngAcceptInputType_disabled: BooleanInput;
    static ngAcceptInputType_inline: BooleanInput;
    static ngAcceptInputType_openOnInputClick: BooleanInput;
    static ɵfac: i0.ɵɵFactoryDeclaration<MdbDatepickerComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<MdbDatepickerComponent, "mdb-datepicker", ["mdbDatepicker"], { "disabled": "disabled"; "inline": "inline"; "format": "format"; "filter": "filter"; "openOnInputClick": "openOnInputClick"; "options": "options"; "startDate": "startDate"; "startDay": "startDay"; "startView": "startView"; "minDate": "minDate"; "maxDate": "maxDate"; }, { "dateChanged": "dateChanged"; "viewChanged": "viewChanged"; "clearButtonClicked": "clearButtonClicked"; "cancelButtonClicked": "cancelButtonClicked"; "confirmButtonClicked": "confirmButtonClicked"; "opened": "opened"; "closed": "closed"; }, never, never>;
}
