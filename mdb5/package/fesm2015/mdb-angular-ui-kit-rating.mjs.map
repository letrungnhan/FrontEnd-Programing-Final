{"version":3,"file":"mdb-angular-ui-kit-rating.mjs","sources":["../../../projects/mdb-angular-ui-kit/rating/rating-icon.component.ts","../../../projects/mdb-angular-ui-kit/rating/rating-icon.component.html","../../../projects/mdb-angular-ui-kit/rating/rating.component.ts","../../../projects/mdb-angular-ui-kit/rating/rating.component.html","../../../projects/mdb-angular-ui-kit/rating/rating.module.ts","../../../projects/mdb-angular-ui-kit/rating/mdb-angular-ui-kit-rating.ts"],"sourcesContent":["import { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n} from '@angular/core';\n\n@Component({\n  selector: 'mdb-rating-icon',\n  templateUrl: 'rating-icon.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MdbRatingIconComponent {\n  @Input()\n  set icon(value: string) {\n    this._icon = value;\n  }\n  get icon(): string {\n    return this._icon;\n  }\n  @Input() color = 'primary';\n  @Input()\n  set active(value: boolean) {\n    this._active = coerceBooleanProperty(value);\n  }\n  get active(): boolean {\n    return this._active;\n  }\n  @Input()\n  set after(value: string) {\n    this._after = value;\n  }\n  get after(): string {\n    return this._after;\n  }\n  @Input()\n  set before(value: string) {\n    this._before = value;\n  }\n  get before(): string {\n    return this._before;\n  }\n\n  @Output() activeIcon: EventEmitter<MdbRatingIconComponent> = new EventEmitter();\n\n  private _active = false;\n  private _icon = 'fa-star fa-sm';\n  private _originalIconClass: string;\n  private _after = '';\n  private _before = '';\n\n  public disabled = false;\n\n  constructor(private _cdRef: ChangeDetectorRef) {}\n\n  onMouseenter(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.setActive(true);\n    this.activeIcon.emit(this);\n  }\n\n  setActive(isActive: boolean, iconClass?: string): void {\n    this.active = isActive;\n\n    if (iconClass) {\n      this.setDynamicIcon(iconClass);\n    } else {\n      this.resetIcon();\n    }\n\n    this._cdRef.markForCheck();\n  }\n\n  setDynamicIcon(iconClass: string): void {\n    if (!this._originalIconClass) {\n      this._originalIconClass = this.icon;\n    }\n\n    this.icon = iconClass.replace('far', '');\n  }\n\n  resetIcon(): void {\n    this.icon = this._originalIconClass || this.icon;\n  }\n\n  static ngAcceptInputType_active: BooleanInput;\n}\n","<span>\n  <span class=\"text-body\">{{ before }}</span>\n  <i\n    [ngClass]=\"active ? 'fas ' + icon + ' active' : 'far ' + icon\"\n    [ngStyle]=\"{ color: color }\"\n    (mouseenter)=\"onMouseenter()\"\n  ></i>\n  <span class=\"text-body\">{{ after }}</span>\n</span>\n","import {\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  EventEmitter,\n  Input,\n  Output,\n  QueryList,\n  OnDestroy,\n} from '@angular/core';\nimport { merge, Subject } from 'rxjs';\nimport { startWith, switchMap, takeUntil, tap } from 'rxjs/operators';\nimport { MdbRatingIconComponent } from './rating-icon.component';\n@Component({\n  selector: 'mdb-rating',\n  templateUrl: 'rating.component.html',\n})\nexport class MdbRatingComponent implements AfterViewInit, OnDestroy {\n  @ContentChildren(MdbRatingIconComponent) icons: QueryList<MdbRatingIconComponent>;\n\n  @Input() readonly = false;\n  @Input()\n  set value(value) {\n    this._value = value;\n  }\n  get value(): number {\n    return this._value;\n  }\n\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onSelect: EventEmitter<number> = new EventEmitter();\n  // eslint-disable-next-line @angular-eslint/no-output-on-prefix\n  @Output() onHover: EventEmitter<number> = new EventEmitter();\n\n  private _value = 0;\n  private _iconIndex: number;\n  private _icon: string;\n  private _selectedIcon: string;\n\n  readonly _destroy$: Subject<void> = new Subject<void>();\n\n  constructor() {}\n\n  ngAfterViewInit(): void {\n    if (this.readonly) {\n      this.icons.forEach((icon) => {\n        icon.disabled = true;\n      });\n      return;\n    }\n\n    this.icons.changes\n      .pipe(\n        startWith(this.icons),\n        switchMap((icons: QueryList<MdbRatingIconComponent>) => {\n          return merge(...icons.map((icon: MdbRatingIconComponent) => icon.activeIcon));\n        }),\n        takeUntil(this._destroy$)\n      )\n      .subscribe((icon: MdbRatingIconComponent) => {\n        const index = this.icons.toArray().findIndex((el) => {\n          return el === icon;\n        });\n\n        this._iconIndex = index;\n        this._icon = icon.icon;\n        this.setActive(index + 1, this._icon);\n        this.onHover.emit(this._iconIndex + 1);\n      });\n  }\n\n  ngOnDestroy(): void {\n    this._destroy$.next();\n    this._destroy$.unsubscribe();\n  }\n\n  setActive(iconIndex: number, iconClass?: string): void {\n    this.icons.forEach((icon, index) => {\n      if (index >= iconIndex) {\n        icon.setActive(false);\n      } else {\n        icon.setActive(true, iconClass);\n      }\n    });\n  }\n\n  onClick(): void {\n    if (this.readonly) {\n      return;\n    }\n\n    this.value = this._iconIndex + 1;\n    this._selectedIcon = this._icon;\n    this.onSelect.emit(this.value);\n  }\n\n  onMouseleave(): void {\n    if (this.readonly) {\n      return;\n    }\n\n    if (this.value) {\n      this.setActive(this.value, this._selectedIcon);\n    } else {\n      this.setActive(-1);\n    }\n  }\n}\n","<div class=\"rating\" (click)=\"onClick()\" (mouseleave)=\"onMouseleave()\">\n  <ng-content></ng-content>\n</div>\n","import { NgModule } from '@angular/core';\nimport { MdbRatingComponent } from './rating.component';\nimport { MdbRatingIconComponent } from './rating-icon.component';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [MdbRatingComponent, MdbRatingIconComponent],\n  imports: [CommonModule],\n  exports: [MdbRatingComponent, MdbRatingIconComponent],\n})\nexport class MdbRatingModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}