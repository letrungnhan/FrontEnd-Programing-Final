{"version":3,"file":"mdb-angular-ui-kit-autocomplete.mjs","sources":["../../../projects/mdb-angular-ui-kit/autocomplete/autocomplete.animations.ts","../../../projects/mdb-angular-ui-kit/autocomplete/autocomplete.component.ts","../../../projects/mdb-angular-ui-kit/autocomplete/autocomplete.component.html","../../../projects/mdb-angular-ui-kit/autocomplete/autocomplete.directive.ts","../../../projects/mdb-angular-ui-kit/autocomplete/autocomplete.module.ts","../../../projects/mdb-angular-ui-kit/autocomplete/mdb-angular-ui-kit-autocomplete.ts"],"sourcesContent":["import {\n  trigger,\n  state,\n  style,\n  transition,\n  animate,\n  query,\n  animateChild,\n} from '@angular/animations';\n\nexport const dropdownContainerAnimation = trigger('dropdownContainerAnimation', [\n  transition('* => void', [query('@*', [animateChild()], { optional: true })]),\n]);\n\nexport const dropdownAnimation = trigger('dropdownAnimation', [\n  state(\n    'void',\n    style({\n      transform: 'scaleY(0.8)',\n      opacity: 0,\n    })\n  ),\n  state(\n    'visible',\n    style({\n      opacity: 1,\n      transform: 'scaleY(1)',\n    })\n  ),\n  transition('void => *', animate('200ms')),\n  transition('* => void', animate('200ms')),\n]);\n","import {\n  AfterContentInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  QueryList,\n  OnDestroy,\n  TemplateRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { MdbOptionComponent, MDB_OPTION_PARENT } from 'mdb-angular-ui-kit/option';\nimport { Subject } from 'rxjs';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { dropdownAnimation, dropdownContainerAnimation } from './autocomplete.animations';\nimport { BooleanInput, coerceBooleanProperty } from '@angular/cdk/coercion';\n\nexport interface MdbAutocompleteSelectedEvent {\n  component: MdbAutocompleteComponent;\n  option: MdbOptionComponent;\n}\n\n@Component({\n  selector: 'mdb-autocomplete',\n  templateUrl: 'autocomplete.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'mdbAutocomplete',\n  animations: [dropdownAnimation, dropdownContainerAnimation],\n  providers: [{ provide: MDB_OPTION_PARENT, useExisting: MdbAutocompleteComponent }],\n})\nexport class MdbAutocompleteComponent implements AfterContentInit, OnDestroy {\n  @ContentChildren(MdbOptionComponent, { descendants: true })\n  options: QueryList<MdbOptionComponent>;\n\n  @ViewChild('dropdown', { static: false }) dropdown: ElementRef;\n  @ViewChild('dropdownTemplate', { static: true }) dropdownTemplate: TemplateRef<any>;\n\n  @Input()\n  get autoSelect(): boolean {\n    return this._autoSelect;\n  }\n  set autoSelect(value: boolean) {\n    this._autoSelect = coerceBooleanProperty(value);\n  }\n  private _autoSelect: boolean;\n\n  @Input()\n  get disabled(): boolean {\n    return this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  @Input()\n  get optionHeight(): any {\n    return this._optionHeight;\n  }\n\n  set optionHeight(value: any) {\n    if (value !== 0) {\n      this._optionHeight = value;\n    }\n  }\n\n  private _optionHeight = 38;\n\n  @Input()\n  get listHeight(): number {\n    return this._listHeight;\n  }\n\n  set listHeight(value: number) {\n    if (value !== 0) {\n      this._listHeight = value;\n    }\n  }\n  // Equal to 5 * optionHeight (which is 38px by default)\n  private _listHeight = 190;\n\n  @Input() displayValue: ((value: any) => string) | null;\n\n  @Output() selected: EventEmitter<MdbAutocompleteSelectedEvent> =\n    new EventEmitter<MdbAutocompleteSelectedEvent>();\n  @Output() opened: EventEmitter<void> = new EventEmitter<void>();\n  @Output() closed: EventEmitter<void> = new EventEmitter<void>();\n\n  private _destroy$ = new Subject<void>();\n\n  _keyManager: ActiveDescendantKeyManager<MdbOptionComponent>;\n\n  private _isOpen = false;\n  protected showNoResultText = false;\n\n  constructor(private _cdRef: ChangeDetectorRef) {}\n\n  _getOptionsArray(): MdbOptionComponent[] {\n    return this.options.toArray();\n  }\n\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  _getScrollTop(): number {\n    return this.dropdown ? this.dropdown.nativeElement.scrollTop : 0;\n  }\n\n  _setScrollTop(scrollPosition: number) {\n    if (this.dropdown) {\n      this.dropdown.nativeElement.scrollTop = scrollPosition;\n    }\n  }\n\n  _markForCheck() {\n    this._cdRef.markForCheck();\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new ActiveDescendantKeyManager<MdbOptionComponent>(this.options);\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","<ng-template #dropdownTemplate>\n  <div [@dropdownContainerAnimation] class=\"autocomplete-dropdown-container\">\n    <div [@dropdownAnimation] role=\"listbox\" class=\"autocomplete-dropdown\">\n      <div\n        #dropdown\n        class=\"autocomplete-items-list\"\n        [ngStyle]=\"{\n          'max-height.px': listHeight\n        }\"\n      >\n        <ng-content></ng-content>\n      </div>\n      <ng-content select=\".autocomplete-no-results\"></ng-content>\n      <ng-content select=\".autocomplete-custom-content\"></ng-content>\n    </div>\n  </div>\n</ng-template>\n","import {\n  Directive,\n  ElementRef,\n  Inject,\n  Input,\n  OnDestroy,\n  forwardRef,\n  HostListener,\n  ViewContainerRef,\n  QueryList,\n  HostBinding,\n} from '@angular/core';\nimport { MdbAutocompleteComponent } from './autocomplete.component';\n\nimport { DOCUMENT } from '@angular/common';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { TAB, ENTER, HOME, END, ESCAPE, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { Subject, fromEvent, merge } from 'rxjs';\nimport { takeUntil, filter, tap, switchMap, startWith } from 'rxjs/operators';\nimport {\n  OverlayRef,\n  Overlay,\n  PositionStrategy,\n  ConnectionPositionPair,\n  ViewportRuler,\n} from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport { MdbOptionComponent } from 'mdb-angular-ui-kit/option';\n\nexport const MDB_AUTOCOMPLETE_VALUE_ACCESOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  // tslint:disable-next-line: no-use-before-declare\n  useExisting: forwardRef(() => MdbAutocompleteDirective),\n  multi: true,\n};\n\n@Directive({\n  selector: 'input[mdbAutocomplete], textarea[mdbAutocomplete]',\n  exportAs: 'mdbAutocompleteInput',\n  providers: [MDB_AUTOCOMPLETE_VALUE_ACCESOR],\n})\nexport class MdbAutocompleteDirective implements OnDestroy, ControlValueAccessor {\n  @Input() mdbAutocomplete: MdbAutocompleteComponent;\n\n  private _overlayRef: OverlayRef | null;\n  private _portal: TemplatePortal;\n  private _canOpenOnFocus = true;\n  _isDropdownOpen = false;\n\n  private _destroy$: Subject<void> = new Subject();\n\n  get input(): HTMLInputElement {\n    return this._elementRef.nativeElement;\n  }\n\n  // get labelActive(): boolean {\n  //   return this._isDropdownOpen || this.hasValue;\n  // }\n\n  get hasValue(): boolean {\n    return this._elementRef.nativeElement.value;\n  }\n\n  @HostListener('keydown', ['$event'])\n  onKeydown(event: KeyboardEvent) {\n    this._handleKeyDown(event);\n    // tslint:disable-next-line: deprecation\n    const isTabKey = event.keyCode === TAB;\n    if (isTabKey) {\n      if (this.mdbAutocomplete.autoSelect && this.activeOption && this._isDropdownOpen) {\n        this._setValue(this.activeOption);\n        this.activeOption.select();\n        this._resetHighlight();\n        this._clearPreviousSelection();\n      }\n      this.close();\n    }\n  }\n\n  @HostListener('input', ['$event'])\n  _handleInput(event: any) {\n    if (!this._isDropdownOpen) {\n      this.open();\n    }\n\n    this._onChange(event.target.value);\n  }\n\n  @HostListener('focusin')\n  _handleFocusIn() {\n    if (!this._canOpenOnFocus) {\n      this._canOpenOnFocus = true;\n    } else {\n      this.open();\n    }\n  }\n\n  @HostListener('blur')\n  _handleBlur() {\n    this._canOpenOnFocus = this.document.activeElement !== this.input;\n    this._onTouched();\n  }\n\n  @HostBinding('class.autocomplete-input') autocomplete = true;\n\n  @HostBinding('class.focused')\n  get isOpen(): boolean {\n    return this._isDropdownOpen;\n  }\n\n  @HostBinding('class.autocomplete-active')\n  get labelActive(): boolean {\n    return this._isDropdownOpen || this.hasValue;\n  }\n\n  constructor(\n    private _overlay: Overlay,\n    private _vcr: ViewContainerRef,\n    private _elementRef: ElementRef,\n    private _viewportRuler: ViewportRuler,\n    @Inject(DOCUMENT) private document: any\n  ) {}\n\n  private _handleKeyDown(event: KeyboardEvent) {\n    // tslint:disable-next-line: deprecation\n    const key = event.keyCode;\n    const manager = this.mdbAutocomplete._keyManager;\n\n    if (this.activeOption && this._isDropdownOpen && key === ENTER) {\n      this._setValue(this.activeOption);\n      this.activeOption.select();\n      this._resetHighlight();\n      this._clearPreviousSelection();\n      this.close();\n      event.preventDefault();\n    }\n\n    if (this.mdbAutocomplete) {\n      const previousActiveItem = manager.activeItem;\n\n      if (this._isDropdownOpen || key === TAB) {\n        manager.onKeydown(event);\n      }\n\n      if (!this._isDropdownOpen && key === DOWN_ARROW && event.altKey) {\n        this.open();\n      }\n\n      if (key === HOME) {\n        manager.setFirstItemActive();\n      } else if (key === END) {\n        manager.setLastItemActive();\n      }\n\n      if (manager.activeItem !== previousActiveItem) {\n        this._moveHighlightedIntoView();\n      }\n    }\n  }\n\n  private _moveHighlightedIntoView() {\n    const index = this.mdbAutocomplete._keyManager.activeItemIndex;\n\n    if (index === 0) {\n      this.mdbAutocomplete._setScrollTop(0);\n    } else if (index && index > -1) {\n      let newScrollPosition: number;\n      const option = this.mdbAutocomplete._getOptionsArray()[index];\n      const optionHeight = option.offsetHeight;\n      const listHeight = this.mdbAutocomplete.listHeight;\n\n      const itemTop = index * optionHeight;\n      const itemBottom = itemTop + optionHeight;\n\n      const viewTop = this.mdbAutocomplete._getScrollTop();\n      const viewBottom = viewTop + listHeight;\n\n      if (itemBottom > viewBottom) {\n        newScrollPosition = itemBottom - listHeight;\n        this.mdbAutocomplete._setScrollTop(newScrollPosition);\n      } else if (itemTop < viewTop) {\n        newScrollPosition = itemTop;\n        this.mdbAutocomplete._setScrollTop(newScrollPosition);\n      }\n    }\n  }\n\n  private _setValue(option: MdbOptionComponent) {\n    this._clearPreviousSelection();\n\n    const value =\n      this.mdbAutocomplete && this.mdbAutocomplete.displayValue\n        ? this.mdbAutocomplete.displayValue(option.value)\n        : option.value;\n    this._setInputValue(value);\n    this._onChange(value);\n\n    this.mdbAutocomplete.selected.emit({\n      component: this.mdbAutocomplete,\n      option: option,\n    });\n  }\n\n  private _clearPreviousSelection() {\n    this.mdbAutocomplete.options.forEach((option: MdbOptionComponent) => {\n      if (option.selected) {\n        option.deselect();\n      }\n    });\n  }\n\n  private _setInputValue(value: any) {\n    this.input.value = value;\n  }\n\n  get activeOption(): MdbOptionComponent | null {\n    if (this.mdbAutocomplete && this.mdbAutocomplete._keyManager) {\n      return this.mdbAutocomplete._keyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  private _resetHighlight() {\n    this.mdbAutocomplete._keyManager.setActiveItem(0);\n  }\n\n  open() {\n    let overlayRef = this._overlayRef;\n\n    if (!overlayRef) {\n      this._portal = new TemplatePortal(this.mdbAutocomplete.dropdownTemplate, this._vcr);\n\n      overlayRef = this._overlay.create({\n        width: this.input.offsetWidth,\n        scrollStrategy: this._overlay.scrollStrategies.reposition(),\n        positionStrategy: this._getOverlayPosition(),\n      });\n\n      this._overlayRef = overlayRef;\n\n      overlayRef.keydownEvents().subscribe((event: KeyboardEvent) => {\n        // tslint:disable-next-line: deprecation\n        const key = event.keyCode;\n\n        if (key === ESCAPE || (key === UP_ARROW && event.altKey)) {\n          event.preventDefault();\n          event.stopPropagation();\n          this.close();\n          this._resetHighlight();\n        }\n      });\n\n      this._listenToOptionChange();\n    }\n\n    if (overlayRef && !overlayRef.hasAttached()) {\n      overlayRef.attach(this._portal);\n      this._listenToOutSideCick(overlayRef, this.input).subscribe(() => this.close());\n    }\n\n    if (this._viewportRuler) {\n      this._viewportRuler\n        .change()\n        .pipe(takeUntil(this._destroy$))\n        .subscribe(() => {\n          if (this._isDropdownOpen && overlayRef) {\n            overlayRef.updateSize({ width: this.input.offsetWidth });\n          }\n        });\n    }\n\n    this.mdbAutocomplete._keyManager.setActiveItem(0);\n    this.mdbAutocomplete._markForCheck();\n    this._isDropdownOpen = true;\n    this.mdbAutocomplete.opened.emit();\n  }\n\n  private _listenToOptionChange() {\n    this.mdbAutocomplete.options.changes\n      .pipe(\n        startWith(this.mdbAutocomplete.options),\n        tap(() => {\n          if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.updatePosition();\n          }\n        }),\n        switchMap((options: QueryList<MdbOptionComponent>) => {\n          Promise.resolve().then(() => this._resetHighlight());\n          return merge(...options.map((option: MdbOptionComponent) => option.click$));\n        }),\n        takeUntil(this._destroy$)\n      )\n      .subscribe((clickedOption: MdbOptionComponent) => this._handleOptionClick(clickedOption));\n  }\n\n  private _handleOptionClick(option: MdbOptionComponent) {\n    this._resetHighlight();\n    this._clearPreviousSelection();\n    this._setValue(option);\n    this._canOpenOnFocus = false;\n    this.input.focus();\n    this.close();\n    option.select();\n  }\n\n  close() {\n    if (!this._isDropdownOpen) {\n      return;\n    }\n\n    if (this._overlayRef && this._overlayRef.hasAttached()) {\n      this._overlayRef.detach();\n      this._isDropdownOpen = false;\n      this.mdbAutocomplete.closed.emit();\n    }\n  }\n\n  private _listenToOutSideCick(overlayRef: OverlayRef, origin: HTMLElement) {\n    return fromEvent(document, 'click').pipe(\n      filter((event: MouseEvent) => {\n        const target = event.target as HTMLElement;\n        const notOrigin = target !== origin;\n        const notOverlay = !!overlayRef && overlayRef.overlayElement.contains(target) === false;\n        return notOrigin && notOverlay;\n      }),\n      takeUntil(overlayRef.detachments())\n    );\n  }\n\n  private _getOverlayPosition(): PositionStrategy {\n    const positionStrategy = this._overlay\n      .position()\n      .flexibleConnectedTo(this.input)\n      .withPositions(this._getPositions())\n      .withPush(false);\n\n    return positionStrategy;\n  }\n\n  private _getPositions(): ConnectionPositionPair[] {\n    // If label floats we need to add additional offset for top position\n    // Bottom offset is needed because of the box-shadow on input border\n    const bottomOffset = 1;\n    const topOffset = -6;\n    return [\n      {\n        originX: 'start',\n        originY: 'bottom',\n        offsetY: bottomOffset,\n        overlayX: 'start',\n        overlayY: 'top',\n      },\n      {\n        originX: 'start',\n        originY: 'top',\n        offsetY: topOffset,\n        overlayX: 'start',\n        overlayY: 'bottom',\n      },\n    ];\n  }\n\n  ngOnDestroy() {\n    this._destroy$.next();\n    this._destroy$.complete();\n    this._destroyDropdown();\n  }\n\n  private _destroyDropdown() {\n    if (this._overlayRef) {\n      this.close();\n      this._overlayRef.dispose();\n      this._overlayRef = null;\n    }\n  }\n\n  /** Control value accessor methods */\n\n  setDisabledState(isDisabled: boolean) {\n    this.input.disabled = isDisabled;\n  }\n\n  _onChange: (value: any) => void = () => {};\n\n  _onTouched = () => {};\n\n  writeValue(value: any): void {\n    Promise.resolve().then(() => {\n      this.input.value = value;\n    });\n  }\n\n  registerOnChange(fn: (value: any) => {}): void {\n    this._onChange = fn;\n  }\n\n  registerOnTouched(fn: () => {}) {\n    this._onTouched = fn;\n  }\n}\n","import { NgModule } from '@angular/core';\n\nimport { MdbAutocompleteComponent } from './autocomplete.component';\nimport { MdbAutocompleteDirective } from './autocomplete.directive';\nimport { CommonModule } from '@angular/common';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\nimport { MdbOptionModule } from 'mdb-angular-ui-kit/option';\nimport { OverlayModule } from '@angular/cdk/overlay';\n\n@NgModule({\n  imports: [CommonModule, HttpClientModule, FormsModule, MdbOptionModule, OverlayModule],\n  declarations: [MdbAutocompleteComponent, MdbAutocompleteDirective],\n  exports: [MdbAutocompleteComponent, MdbAutocompleteDirective, MdbOptionModule],\n})\nexport class MdbAutocompleteModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}